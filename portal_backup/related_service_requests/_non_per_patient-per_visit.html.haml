- if @one_time_fee_line_items.blank?
  %div.blank_requests
    There are no one time fee requests.
- else
  - @sub_service_request.line_items.each do |li|
    - unless li.try(:visits)
      %li.service.one_time_fee
        %ul
          %li.ui-corner-all.non_per_patient_per_visit
            %span.ui-icon.ui-icon-triangle-1-e.open_close_fulfillment{:style => 'display:inline-block'}
            %span.ui-icon.ui-icon-triangle-1-s.open_close_fulfillment{:style => 'display:none'}
            %div.ui-corner-left{:style => 'width:200px'}
              %input#is_fullfillment{:type => 'hidden'}
              %select{:id => "service_#{li.service.id}", :class => "service_id", :style => 'width:200px', :'data-old_service_id' => li.service.id}

                - @one_time_fee_services.each do |service|
                  - ls = Service.find(service['id'], {:core_id => service['core_id']})
                  - core = ls.build_core_by_core_id
                  / - if services_are_available(ls, service, li, core)
                  %option{:value => service['id'], :'data-is_one_time_fee' => ls.pricing_map['is_one_time_fee'].to_s, :'data-cost' => (determine_package_cost(@project, ls) * 0.01 rescue 'N/A'), :selected => service_selected(service['id'], li.service.id), :'data-unit_type' => ls.pricing_map['unit_type'], :'data-unit_factor' => ls.pricing_map['unit_factor']}= service['name']
                / - unless li.service.try(:is_available) == false || core_is_available(li.service)
                /   %option{:value => li.service.id, :'data-is_one_time_fee' => li.service.pricing_map['is_one_time_fee'].to_s, :'data-cost' => (determine_package_cost(@project, li.service) * 0.01), :selected => true, :'data-unit_type' => li.service.pricing.unit_type}=li.service.name
            .charge_code= li.service.try(:charge_code) rescue 'N/A'
            %div{:style => 'width:40px'}
              %input.quantity.service_quantity{:type => 'text', :value => li.quantity, :'data-cost' => (determine_package_cost(@project, li.service) * 0.01 rescue 'N/A'), :'data-old_quantity' => li.quantity}
            .service_type= li.service.pricing.unit_type
            .cost_per_service
              = display_one_time_service_total(li)
            %div{:style => 'width:67px'}= @service_request.submitted_at.try(:to_date).try(:strftime, '%m/%d/%Y')
            .date_area
              %input.in_process.date{:type => 'text', :value => li.in_process_date}
            .date_area
              %input.complete.date{:type => 'text', :value => li.complete_date}
            %div.remove_service.ui-corner-right{:'data-service_type' => 'one_time_fee'}= link_to(image_tag('cancel.png'), 'javascript:void(0);')

            %input.sub_service_request_id{:type => 'hidden', :value => li.sub_service_request_id}

        %span.fulfillments{:style => 'display:none'}
          %ul.fulfillment
            - if li.fulfillment
              - li.fulfillment.each_with_index do |fulfill, i|
                %li.left
                  %div
                    Date:
                    %input.date{:type => 'text', :value => fulfill['date']}
                  %div
                    Qty:
                    %input.time{:type => 'text', :value => populate_fulfillment_time(fulfill), :'data-old_value' => populate_fulfillment_time(fulfill)}
                    %select.timeframe
                      %option{:selected => timeframe_selected('Min', fulfill.try(:[], 'timeframe'))} Min
                      %option{:selected => timeframe_selected('Hours', fulfill.try(:[], 'timeframe'))} Hours
                      %option{:selected => timeframe_selected('Days', fulfill.try(:[], 'timeframe'))} Days
                      %option{:selected => timeframe_selected('Each', fulfill.try(:[], 'timeframe'))} Each
                  %div
                    Notes:
                    %input.notes{:type => 'text', :value => fulfill['notes']}
                  %div.remove_fulfillment= link_to(image_tag('cancel.png'), 'javascript:void(0);')
          %ul.new_fulfillment
            %li.center.ui-corner-bottom
              %div{:style => 'margin-left:15px;'}
                %a{:href => 'javascript:void(0);'}
                  = image_tag('add.png')
                  Add fulfillment data

:javascript
  Sparc.fulfillment_one_time_fees.ready();