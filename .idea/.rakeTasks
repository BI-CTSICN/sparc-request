<?xml version="1.0" encoding="UTF-8"?>
<Settings><!--This file was automatically generated by Ruby plugin.
You are allowed to: 
1. Remove rake task
2. Add existing rake tasks
To add existing rake tasks automatically delete this file and reload the project.
--><RakeGroup description="" fullCmd="" taksId="rake"><RakeTask description="List versions of all Rails frameworks and the environment" fullCmd="about" taksId="about" /><RakeGroup description="" fullCmd="" taksId="acts_as_taggable_on_engine"><RakeGroup description="" fullCmd="" taksId="install"><RakeTask description="Copy migrations from acts_as_taggable_on_engine to application" fullCmd="acts_as_taggable_on_engine:install:migrations" taksId="migrations" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="tag_names"><RakeTask description="Forcing collate of tag names to utf8_bin" fullCmd="acts_as_taggable_on_engine:tag_names:collate_bin" taksId="collate_bin" /><RakeTask description="Forcing collate of tag names to utf8_general_ci" fullCmd="acts_as_taggable_on_engine:tag_names:collate_ci" taksId="collate_ci" /></RakeGroup></RakeGroup><RakeTask description="add new study type questions" fullCmd="add_new_study_type_questions" taksId="add_new_study_type_questions" /><RakeTask description="Add Draft Service Request to any existing Protocols with no Service Requests" fullCmd="add_service_request_to_dashboard_protocols" taksId="add_service_request_to_dashboard_protocols" /><RakeTask description="Print API routes" fullCmd="api_routes" taksId="api_routes" /><RakeGroup description="" fullCmd="" taksId="app"><RakeTask description="Applies the template supplied by LOCATION=(/path/to/template) or URL" fullCmd="app:template" taksId="template" /><RakeTask description="Update configs and some other initially generated files (or use just update:configs or update:bin)" fullCmd="app:update" taksId="update" /><RakeGroup description="" fullCmd="" taksId="templates"><RakeTask description="" fullCmd="app:templates:copy" taksId="copy" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="update"><RakeTask description="" fullCmd="app:update:bin" taksId="bin" /><RakeTask description="" fullCmd="app:update:configs" taksId="configs" /><RakeTask description="" fullCmd="app:update:upgrade_guide_info" taksId="upgrade_guide_info" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="assets"><RakeTask description="Remove old compiled assets" fullCmd="assets:clean[keep]" taksId="clean[keep]" /><RakeTask description="Remove compiled assets" fullCmd="assets:clobber" taksId="clobber" /><RakeTask description="Load asset compile environment" fullCmd="assets:environment" taksId="environment" /><RakeTask description="Compile all the assets named in config.assets.precompile" fullCmd="assets:precompile" taksId="precompile" /><RakeTask description="" fullCmd="assets:clean" taksId="clean" /></RakeGroup><RakeTask description="Create an Associated Survey" fullCmd="associate_survey" taksId="associate_survey" /><RakeGroup description="" fullCmd="" taksId="cache_digests"><RakeTask description="Lookup first-level dependencies for TEMPLATE (like messages/show or comments/_comment.html)" fullCmd="cache_digests:dependencies" taksId="dependencies" /><RakeTask description="Lookup nested dependencies for TEMPLATE (like messages/show or comments/_comment.html)" fullCmd="cache_digests:nested_dependencies" taksId="nested_dependencies" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="cwf_sync"><RakeTask description="Sync data with CWF" fullCmd="cwf_sync:services" taksId="services" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="data"><RakeTask description="Describe audits when provided with a porotocol id" fullCmd="data:audit_by_id" taksId="audit_by_id" /><RakeTask description="List out all destroyed line items for a given service and protocol id" fullCmd="data:audit_destroyed_line_items" taksId="audit_destroyed_line_items" /><RakeTask description="Copy data from one database to another with option to de-identify the data" fullCmd="data:copy" taksId="copy" /><RakeTask description="Fix missing visits" fullCmd="data:fix_missing_visits" taksId="fix_missing_visits" /><RakeTask description="Give user a generic password" fullCmd="data:give_user_generic_password" taksId="give_user_generic_password" /><RakeTask description="Give user a role for protocols" fullCmd="data:give_user_role_for_protocols" taksId="give_user_role_for_protocols" /><RakeTask description="Reports to run after hospital services are imported" fullCmd="data:hospital_service_reports" taksId="hospital_service_reports" /><RakeTask description="Delete duplicated listings" fullCmd="data:id_duplicates" taksId="id_duplicates" /><RakeTask description="Import cores and services from CSV" fullCmd="data:import_cores_and_services[uid_domain]" taksId="import_cores_and_services[uid_domain]" /><RakeTask description="Import rates frm DHHS rate file" fullCmd="data:import_dhhs_rates" taksId="import_dhhs_rates" /><RakeTask description="Import hospital based services using the DHHS rates" fullCmd="data:import_hospital_services" taksId="import_hospital_services" /><RakeTask description="Import identities from CSV" fullCmd="data:import_identities" taksId="import_identities" /><RakeTask description="Import identities (only) from CSV" fullCmd="data:import_identities_only[uid_domain]" taksId="import_identities_only[uid_domain]" /><RakeTask description="Import pricing maps from CSV" fullCmd="data:import_pricing_maps" taksId="import_pricing_maps" /><RakeTask description="Import professional services using the CPT code mapping" fullCmd="data:import_professional_services" taksId="import_professional_services" /><RakeTask description="Import protocols from CSV" fullCmd="data:import_protocols" taksId="import_protocols" /><RakeTask description="Import services from CSV" fullCmd="data:import_services" taksId="import_services" /><RakeTask description="Merge duplicated procedures" fullCmd="data:merge_procedures" taksId="merge_procedures" /><RakeTask description="Create CSV report of all one time fee line items under a given provider" fullCmd="data:one_time_fee_report" taksId="one_time_fee_report" /><RakeTask description="Regenerate settings table from local application.yml" fullCmd="data:regenerate_settings" taksId="regenerate_settings" /><RakeTask description="Delete identities from CSV" fullCmd="data:remove_stale_users" taksId="remove_stale_users" /><RakeTask description="Remove System Satisfaction Survey V1 and its dependencies" fullCmd="data:remove_sys_sat_survey_v1" taksId="remove_sys_sat_survey_v1" /><RakeTask description="Restore service_requester_id" fullCmd="data:restore_service_requester_id" taksId="restore_service_requester_id" /><RakeTask description="List services rendered and their costs" fullCmd="data:service_list_count" taksId="service_list_count" /><RakeTask description="Create CSV report of individual subject calendar data" fullCmd="data:subject_calendar_report" taksId="subject_calendar_report" /><RakeTask description="List services rendered and their costs" fullCmd="data:submitted_ssrs" taksId="submitted_ssrs" /><RakeTask description="Create CSV report of all one time fee line items under a given provider" fullCmd="data:turnaround_times_report" taksId="turnaround_times_report" /><RakeTask description="Updating Protocol with validated Research Master information" fullCmd="data:update_protocol_with_validated_rm" taksId="update_protocol_with_validated_rm" /><RakeTask description="Benchmarks for different active record insertions" fullCmd="data:visit_benchmark" taksId="visit_benchmark" /><RakeTask description="" fullCmd="data:clean_up_services" taksId="clean_up_services" /><RakeTask description="" fullCmd="data:fix_missing_ssr_ids" taksId="fix_missing_ssr_ids" /><RakeTask description="" fullCmd="data:fix_notes_with_wrong_dates" taksId="fix_notes_with_wrong_dates" /><RakeTask description="" fullCmd="data:import_cores_and_services" taksId="import_cores_and_services" /><RakeTask description="" fullCmd="data:import_identities_only" taksId="import_identities_only" /><RakeTask description="" fullCmd="data:move_parent_organization_59" taksId="move_parent_organization_59" /><RakeTask description="" fullCmd="data:move_rm_medications_to_muha" taksId="move_rm_medications_to_muha" /><RakeTask description="" fullCmd="data:remove_identities_from_prs" taksId="remove_identities_from_prs" /><RakeTask description="" fullCmd="data:remove_invalid_identities" taksId="remove_invalid_identities" /><RakeTask description="" fullCmd="data:replace_arm_name_special_characters" taksId="replace_arm_name_special_characters" /><RakeTask description="" fullCmd="data:update_protocol_filters" taksId="update_protocol_filters" /><RakeTask description="" fullCmd="data:upgrade_request_to_approve" taksId="upgrade_request_to_approve" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="db"><RakeTask description="Creates the database from DATABASE_URL or config/database.yml for the current RAILS_ENV (use db:create:all to create all databases in the config). Without RAILS_ENV or when RAILS_ENV is development, it defaults to creating the development and test databases" fullCmd="db:create" taksId="create" /><RakeTask description="Drops the database from DATABASE_URL or config/database.yml for the current RAILS_ENV (use db:drop:all to drop all databases in the config). Without RAILS_ENV or when RAILS_ENV is development, it defaults to dropping the development and test databases" fullCmd="db:drop" taksId="drop" /><RakeGroup description="" fullCmd="" taksId="environment"><RakeTask description="Set the environment value for the database" fullCmd="db:environment:set" taksId="set" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="fixtures"><RakeTask description="Loads fixtures into the current environment's database" fullCmd="db:fixtures:load" taksId="load" /><RakeTask description="" fullCmd="db:fixtures:identify" taksId="identify" /></RakeGroup><RakeTask description="Migrate the database (options: VERSION=x, VERBOSE=false, SCOPE=blog)" fullCmd="db:migrate" taksId="migrate" /><RakeGroup description="" fullCmd="" taksId="migrate"><RakeTask description="Display status of migrations" fullCmd="db:migrate:status" taksId="status" /><RakeTask description="" fullCmd="db:migrate:down" taksId="down" /><RakeTask description="" fullCmd="db:migrate:redo" taksId="redo" /><RakeTask description="" fullCmd="db:migrate:reset" taksId="reset" /><RakeTask description="" fullCmd="db:migrate:up" taksId="up" /></RakeGroup><RakeTask description="Rolls the schema back to the previous version (specify steps w/ STEP=n)" fullCmd="db:rollback" taksId="rollback" /><RakeGroup description="" fullCmd="" taksId="schema"><RakeGroup description="" fullCmd="" taksId="cache"><RakeTask description="Clears a db/schema_cache.yml file" fullCmd="db:schema:cache:clear" taksId="clear" /><RakeTask description="Creates a db/schema_cache.yml file" fullCmd="db:schema:cache:dump" taksId="dump" /></RakeGroup><RakeTask description="Creates a db/schema.rb file that is portable against any DB supported by Active Record" fullCmd="db:schema:dump" taksId="dump" /><RakeTask description="Loads a schema.rb file into the database" fullCmd="db:schema:load" taksId="load" /><RakeTask description="" fullCmd="db:schema:load_if_ruby" taksId="load_if_ruby" /></RakeGroup><RakeTask description="Loads the seed data from db/seeds.rb" fullCmd="db:seed" taksId="seed" /><RakeGroup description="" fullCmd="" taksId="sessions"><RakeTask description="Clear the sessions table" fullCmd="db:sessions:clear" taksId="clear" /><RakeTask description="Creates a sessions migration for use with ActiveRecord::SessionStore" fullCmd="db:sessions:create" taksId="create" /><RakeTask description="Trim old sessions from the table (default: &gt; 30 days)" fullCmd="db:sessions:trim" taksId="trim" /></RakeGroup><RakeTask description="Creates the database, loads the schema, and initializes with the seed data (use db:reset to also drop the database first)" fullCmd="db:setup" taksId="setup" /><RakeGroup description="" fullCmd="" taksId="structure"><RakeTask description="Dumps the database structure to db/structure.sql" fullCmd="db:structure:dump" taksId="dump" /><RakeTask description="Recreates the databases from the structure.sql file" fullCmd="db:structure:load" taksId="load" /><RakeTask description="" fullCmd="db:structure:load_if_sql" taksId="load_if_sql" /></RakeGroup><RakeTask description="Retrieves the current schema version number" fullCmd="db:version" taksId="version" /><RakeTask description="" fullCmd="db:_dump" taksId="_dump" /><RakeTask description="" fullCmd="db:abort_if_pending_migrations" taksId="abort_if_pending_migrations" /><RakeTask description="" fullCmd="db:charset" taksId="charset" /><RakeTask description="" fullCmd="db:check_protected_environments" taksId="check_protected_environments" /><RakeTask description="" fullCmd="db:collation" taksId="collation" /><RakeGroup description="" fullCmd="" taksId="create"><RakeTask description="" fullCmd="db:create:all" taksId="all" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="drop"><RakeTask description="" fullCmd="db:drop:_unsafe" taksId="_unsafe" /><RakeTask description="" fullCmd="db:drop:all" taksId="all" /></RakeGroup><RakeTask description="" fullCmd="db:forward" taksId="forward" /><RakeTask description="" fullCmd="db:load_config" taksId="load_config" /><RakeTask description="" fullCmd="db:purge" taksId="purge" /><RakeGroup description="" fullCmd="" taksId="purge"><RakeTask description="" fullCmd="db:purge:all" taksId="all" /></RakeGroup><RakeTask description="" fullCmd="db:reset" taksId="reset" /><RakeGroup description="" fullCmd="" taksId="test"><RakeTask description="" fullCmd="db:test:load" taksId="load" /><RakeTask description="" fullCmd="db:test:load_schema" taksId="load_schema" /><RakeTask description="" fullCmd="db:test:load_structure" taksId="load_structure" /><RakeTask description="" fullCmd="db:test:prepare" taksId="prepare" /><RakeTask description="" fullCmd="db:test:purge" taksId="purge" /></RakeGroup></RakeGroup><RakeTask description="Deactivate services designated in CSV" fullCmd="deactivate_services" taksId="deactivate_services" /><RakeGroup description="" fullCmd="" taksId="dev"><RakeTask description="Toggle development mode caching on/off" fullCmd="dev:cache" taksId="cache" /></RakeGroup><RakeTask description="Disable non-PB Services" fullCmd="disable_non_pb_services" taksId="disable_non_pb_services" /><RakeTask description="Disable PB Services" fullCmd="disable_pb_services" taksId="disable_pb_services" /><RakeGroup description="" fullCmd="" taksId="email"><RakeTask description="Generate Admin Email For Visual Approval" fullCmd="email:notify_admin" taksId="notify_admin" /><RakeTask description="Generate Service Provider Email For Visual Approval" fullCmd="email:notify_service_provider" taksId="notify_service_provider" /><RakeTask description="Generate User Email For Visual Approval" fullCmd="email:notify_user" taksId="notify_user" /><RakeTask description="Generate Email of SubService Request Deletion For Visual Approval" fullCmd="email:sub_service_request_deleted" taksId="sub_service_request_deleted" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="epic"><RakeTask description="Batch load from Epic Queue" fullCmd="epic:batch_load[automate]" taksId="batch_load[automate]" /><RakeTask description="" fullCmd="epic:batch_load" taksId="batch_load" /></RakeGroup><RakeTask description="Generate an Entity-Relationship Diagram based on your models" fullCmd="erd" taksId="erd" /><RakeTask description="Download the iCal version of the google calendar" fullCmd="fetch_google_calendar" taksId="fetch_google_calendar" /><RakeGroup description="" fullCmd="" taksId="file"><RakeTask description="Add text to the top of a file" fullCmd="file:prepend_files" taksId="prepend_files" /></RakeGroup><RakeTask description="Fix disassociated documents" fullCmd="fix_disassociated_documents" taksId="fix_disassociated_documents" /><RakeTask description="Fix ssr_ids" fullCmd="fix_ssr_ids" taksId="fix_ssr_ids" /><RakeTask description="Import permissible values from csv files and add them to the appropriate table" fullCmd="import_permissible_values" taksId="import_permissible_values" /><RakeTask description="Print out all defined initializers in the order they are invoked by Rails" fullCmd="initializers" taksId="initializers" /><RakeTask description="JIT report" fullCmd="jit_report" taksId="jit_report" /><RakeGroup description="" fullCmd="" taksId="jobs"><RakeTask description="Exit with error status if any jobs older than max_age seconds haven't been attempted yet" fullCmd="jobs:check[max_age]" taksId="check[max_age]" /><RakeTask description="Clear the delayed_job queue" fullCmd="jobs:clear" taksId="clear" /><RakeTask description="Start a delayed_job worker" fullCmd="jobs:work" taksId="work" /><RakeTask description="Start a delayed_job worker and exit when all available jobs are complete" fullCmd="jobs:workoff" taksId="workoff" /><RakeTask description="" fullCmd="jobs:check" taksId="check" /><RakeTask description="" fullCmd="jobs:environment_options" taksId="environment_options" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="log"><RakeTask description="Truncates all/specified *.log files in log/ to zero bytes (specify which logs with LOGS=test,development)" fullCmd="log:clear" taksId="clear" /></RakeGroup><RakeTask description="Match Identity with Professional Organization" fullCmd="match_identity_with_professional_organization" taksId="match_identity_with_professional_organization" /><RakeTask description="Task for merging service requests under a protocol" fullCmd="merge_service_requests" taksId="merge_service_requests" /><RakeTask description="Merge an old service into a new service (example only)" fullCmd="merge_services[services_list]" taksId="merge_services[services_list]" /><RakeTask description="Prints out your Rack middleware stack" fullCmd="middleware" taksId="middleware" /><RakeTask description="Move Cofc Answer" fullCmd="migrate_cofc" taksId="migrate_cofc" /><RakeTask description="Moves a Service to another Organization" fullCmd="move_service[service_id,organization_id]" taksId="move_service[service_id,organization_id]" /><RakeTask description="Enumerate all annotations (use notes:optimize, :fixme, :todo for focus)" fullCmd="notes" taksId="notes" /><RakeGroup description="" fullCmd="" taksId="notes"><RakeTask description="Enumerate a custom annotation, specify with ANNOTATION=CUSTOM" fullCmd="notes:custom" taksId="custom" /><RakeTask description="" fullCmd="notes:fixme" taksId="fixme" /><RakeTask description="" fullCmd="notes:optimize" taksId="optimize" /><RakeTask description="" fullCmd="notes:todo" taksId="todo" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="paperclip"><RakeTask description="Cleans out invalid attachments" fullCmd="paperclip:clean" taksId="clean" /><RakeTask description="find missing attachments" fullCmd="paperclip:find_broken_attachments" taksId="find_broken_attachments" /><RakeTask description="Refreshes both metadata and thumbnails" fullCmd="paperclip:refresh" taksId="refresh" /><RakeGroup description="" fullCmd="" taksId="refresh"><RakeTask description="Regenerates content_type/size metadata for a given CLASS (and optional ATTACHMENT)" fullCmd="paperclip:refresh:metadata" taksId="metadata" /><RakeTask description="Regenerates missing thumbnail styles for all classes using Paperclip" fullCmd="paperclip:refresh:missing_styles" taksId="missing_styles" /><RakeTask description="Regenerates thumbnails for a given CLASS (and optional ATTACHMENT and STYLES splitted by comma)" fullCmd="paperclip:refresh:thumbnails" taksId="thumbnails" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="parallel"><RakeTask description="Create test databases via db:create --&gt; parallel:create[num_cpus]" fullCmd="parallel:create[count]" taksId="create[count]" /><RakeTask description="Drop test databases via db:drop --&gt; parallel:drop[num_cpus]" fullCmd="parallel:drop[count]" taksId="drop[count]" /><RakeTask description="Run features in parallel with parallel:features[num_cpus]" fullCmd="parallel:features[count,pattern,options]" taksId="features[count,pattern,options]" /><RakeTask description="Run features-spinach in parallel with parallel:features-spinach[num_cpus]" fullCmd="parallel:features-spinach[count,pattern,options]" taksId="features-spinach[count,pattern,options]" /><RakeTask description="Load dumped schema for test databases via db:schema:load --&gt; parallel:load_schema[num_cpus]" fullCmd="parallel:load_schema[count]" taksId="load_schema[count]" /><RakeTask description="Load structure for test databases via db:structure:load --&gt; parallel:load_structure[num_cpus]" fullCmd="parallel:load_structure[count]" taksId="load_structure[count]" /><RakeTask description="Update test databases via db:migrate --&gt; parallel:migrate[num_cpus]" fullCmd="parallel:migrate[count]" taksId="migrate[count]" /><RakeTask description="Update test databases by dumping and loading --&gt; parallel:prepare[num_cpus]" fullCmd="parallel:prepare[count]" taksId="prepare[count]" /><RakeTask description="Launch given rake command in parallel" fullCmd="parallel:rake[command,count]" taksId="rake[command,count]" /><RakeTask description="Load the seed data from db/seeds.rb via db:seed --&gt; parallel:seed[num_cpus]" fullCmd="parallel:seed[count]" taksId="seed[count]" /><RakeTask description="Setup test databases via db:setup --&gt; parallel:setup[num_cpus]" fullCmd="parallel:setup[count]" taksId="setup[count]" /><RakeTask description="Run spec in parallel with parallel:spec[num_cpus]" fullCmd="parallel:spec[count,pattern,options]" taksId="spec[count,pattern,options]" /><RakeTask description="Run test in parallel with parallel:test[num_cpus]" fullCmd="parallel:test[count,pattern,options]" taksId="test[count,pattern,options]" /></RakeGroup><RakeTask description="Task for merging two protocols" fullCmd="protocol_merge" taksId="protocol_merge" /><RakeTask description="Remove Duplicate Past Status" fullCmd="remove_duplicate_past_status" taksId="remove_duplicate_past_status" /><RakeTask description="Remove first_draft requests that are over 30 days old" fullCmd="remove_historical_first_draft" taksId="remove_historical_first_draft" /><RakeTask description="Remove nexus pricing maps created on or after 08-01-2015" fullCmd="remove_nexus_pricing_maps" taksId="remove_nexus_pricing_maps" /><RakeGroup description="" fullCmd="" taksId="reports"><RakeTask description="Create billing only report for CWF" fullCmd="reports:billing_only_report" taksId="billing_only_report" /><RakeTask description="Create nexus IRB expiration report" fullCmd="reports:irb_nexus_report" taksId="irb_nexus_report" /><RakeTask description="Create human subject report for all protocols" fullCmd="reports:protocol_human_subjects_report" taksId="protocol_human_subjects_report" /></RakeGroup><RakeTask description="Restart app by touching tmp/restart.txt" fullCmd="restart" taksId="restart" /><RakeTask description="Print out all defined routes in match order, with names" fullCmd="routes" taksId="routes" /><RakeTask description="Generate a cryptographically secure secret key (this is typically used to generate a secret for cookie sessions)" fullCmd="secret" taksId="secret" /><RakeTask description="setup version 3 epic questions" fullCmd="setup_version_3_epic_questions" taksId="setup_version_3_epic_questions" /><RakeTask description="Run all specs in spec directory (excluding plugin specs)" fullCmd="spec" taksId="spec" /><RakeGroup description="" fullCmd="" taksId="spec"><RakeTask description="Run the code examples in spec/api" fullCmd="spec:api" taksId="api" /><RakeTask description="Run the code examples in spec/controllers" fullCmd="spec:controllers" taksId="controllers" /><RakeTask description="Run the code examples in spec/extensions" fullCmd="spec:extensions" taksId="extensions" /><RakeTask description="Run the code examples in spec/features" fullCmd="spec:features" taksId="features" /><RakeTask description="Run the code examples in spec/helpers" fullCmd="spec:helpers" taksId="helpers" /><RakeTask description="Run the code examples in spec/jobs" fullCmd="spec:jobs" taksId="jobs" /><RakeTask description="Run the code examples in spec/lib" fullCmd="spec:lib" taksId="lib" /><RakeTask description="Run the code examples in spec/mailers" fullCmd="spec:mailers" taksId="mailers" /><RakeTask description="Run the code examples in spec/models" fullCmd="spec:models" taksId="models" /><RakeTask description="Run the code examples in spec/views" fullCmd="spec:views" taksId="views" /><RakeTask description="" fullCmd="spec:prepare" taksId="prepare" /><RakeTask description="" fullCmd="spec:statsetup" taksId="statsetup" /></RakeGroup><RakeTask description="Report code statistics (KLOCs, etc) from the application or engine" fullCmd="stats" taksId="stats" /><RakeTask description="change data in version 3 of epic questions" fullCmd="study_type_question_3_fix" taksId="study_type_question_3_fix" /><RakeTask description="Study type report" fullCmd="study_type_report" taksId="study_type_report" /><RakeTask description="Runs all tests in test folder except system ones" fullCmd="test" taksId="test" /><RakeGroup description="" fullCmd="" taksId="test"><RakeTask description="Run tests quickly, but also reset db" fullCmd="test:db" taksId="db" /><RakeTask description="Run system tests only" fullCmd="test:system" taksId="system" /><RakeTask description="" fullCmd="test:controllers" taksId="controllers" /><RakeTask description="" fullCmd="test:functionals" taksId="functionals" /><RakeTask description="" fullCmd="test:generators" taksId="generators" /><RakeTask description="" fullCmd="test:helpers" taksId="helpers" /><RakeTask description="" fullCmd="test:integration" taksId="integration" /><RakeTask description="" fullCmd="test:jobs" taksId="jobs" /><RakeTask description="" fullCmd="test:mailers" taksId="mailers" /><RakeTask description="" fullCmd="test:models" taksId="models" /><RakeTask description="" fullCmd="test:prepare" taksId="prepare" /><RakeTask description="" fullCmd="test:run" taksId="run" /><RakeTask description="" fullCmd="test:units" taksId="units" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="time"><RakeTask description="List all time zones, list by two-letter country code (`rails time:zones[US]`), or list by UTC offset (`rails time:zones[-8]`)" fullCmd="time:zones[country_or_offset]" taksId="zones[country_or_offset]" /><RakeTask description="" fullCmd="time:zones" taksId="zones" /><RakeGroup description="" fullCmd="" taksId="zones"><RakeTask description="" fullCmd="time:zones:all" taksId="all" /><RakeTask description="" fullCmd="time:zones:local" taksId="local" /><RakeTask description="" fullCmd="time:zones:us" taksId="us" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="tmp"><RakeTask description="Clear cache and socket files from tmp/ (narrow w/ tmp:cache:clear, tmp:sockets:clear)" fullCmd="tmp:clear" taksId="clear" /><RakeTask description="Creates tmp directories for cache, sockets, and pids" fullCmd="tmp:create" taksId="create" /><RakeGroup description="" fullCmd="" taksId="cache"><RakeTask description="" fullCmd="tmp:cache:clear" taksId="clear" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="pids"><RakeTask description="" fullCmd="tmp:pids:clear" taksId="clear" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="sockets"><RakeTask description="" fullCmd="tmp:sockets:clear" taksId="clear" /></RakeGroup></RakeGroup><RakeTask description="Prints out unused routes and unreachable action methods" fullCmd="traceroute" taksId="traceroute" /><RakeTask description="Updating service columns as needed" fullCmd="update_hb_services" taksId="update_hb_services" /><RakeGroup description="" fullCmd="" taksId="yarn"><RakeTask description="Install all JavaScript dependencies as specified via Yarn" fullCmd="yarn:install" taksId="install" /></RakeGroup><RakeTask description="" fullCmd="add_versions_to_migrations" taksId="add_versions_to_migrations" /><RakeTask description="" fullCmd="create_user" taksId="create_user" /><RakeTask description="" fullCmd="default" taksId="default" /><RakeTask description="" fullCmd="destroy_bad_arm_and_liv_data" taksId="destroy_bad_arm_and_liv_data" /><RakeTask description="" fullCmd="destroy_duplicate_line_items_visits" taksId="destroy_duplicate_line_items_visits" /><RakeTask description="" fullCmd="discover_creat_for_notes" taksId="discover_creat_for_notes" /><RakeTask description="" fullCmd="environment" taksId="environment" /><RakeGroup description="" fullCmd="" taksId="erd"><RakeTask description="" fullCmd="erd:check_dependencies" taksId="check_dependencies" /><RakeTask description="" fullCmd="erd:generate" taksId="generate" /><RakeTask description="" fullCmd="erd:load_models" taksId="load_models" /><RakeTask description="" fullCmd="erd:options" taksId="options" /></RakeGroup><RakeTask description="" fullCmd="fix_otf_service_associations" taksId="fix_otf_service_associations" /><RakeTask description="" fullCmd="has_duplicate_line_items_visits" taksId="has_duplicate_line_items_visits" /><RakeTask description="" fullCmd="initialize_professional_organizations" taksId="initialize_professional_organizations" /><RakeTask description="" fullCmd="merge_services" taksId="merge_services" /><RakeTask description="" fullCmd="merge_srs" taksId="merge_srs" /><RakeTask description="" fullCmd="move_service" taksId="move_service" /><RakeTask description="" fullCmd="professional_organizations_update" taksId="professional_organizations_update" /><RakeGroup description="" fullCmd="" taksId="railties"><RakeGroup description="" fullCmd="" taksId="install"><RakeTask description="" fullCmd="railties:install:migrations" taksId="migrations" /></RakeGroup></RakeGroup><RakeTask description="" fullCmd="send_to_epic" taksId="send_to_epic" /><RakeTask description="" fullCmd="status_recovery" taksId="status_recovery" /><RakeTask description="" fullCmd="tmp" taksId="tmp" /><RakeTask description="" fullCmd="tmp/cache" taksId="tmp/cache" /><RakeTask description="" fullCmd="tmp/cache/assets" taksId="tmp/cache/assets" /><RakeTask description="" fullCmd="tmp/pids" taksId="tmp/pids" /><RakeTask description="" fullCmd="tmp/sockets" taksId="tmp/sockets" /><RakeTask description="" fullCmd="update_copyright" taksId="update_copyright" /></RakeGroup></Settings>
