-# Copyright Â© 2011 MUSC Foundation for Research Development
-# All rights reserved.

-# Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

-# 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.

-# 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following
-# disclaimer in the documentation and/or other materials provided with the distribution.

-# 3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products
-# derived from this software without specific prior written permission.

-# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,
-# BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
-# SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
-# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
-# TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

#service_request_info
  = render 'service_request_info'

#notifications_area
  = render :partial => 'notifications_area', :locals => {:service_request => service_request, :protocol => @protocol, :sub_service_request => sub_service_request}

.clear

#fulfillment_info.ui-corner-all
  - if @sub_service_request.ctrc?
    #service_request_core_approvals
      = render 'core_approvals'
    #service_request_committee_approval
      = render 'committee_approval'
      
  #service_request_status_changes
    = render 'status_changes'
  
  #ssr_subsidy_changes
    = render 'subsidy_changes'
    
  #service_request_approval_changes
    = render 'approval_changes'

  #service_request_information
    = render 'service_request_information'

#fulfillment_services.ui-corner-all
  %h3= t(:fulfillments)[:services][:header]
  #one_time_fees
    = render 'one_time_fees'

  %br

  #add_otf_service_container
    #add_otf_service_button.btn.btn-md.btn-warning{:'data-sub_service_request_id' => @sub_service_request.id}
      = t(:fulfillments)[:service_button]
    -# = render :partial => 'add_service', :locals => {:services => @candidate_one_time_fees, :select_id => 'new_otf_service_id'}

  %br
  
  = javascript_include_tag 'jquery.qtip.min'
  #per_patient_services
    = render partial: 'per_patient_per_visit', locals: {sub_service_request: sub_service_request, service_request: service_request}

#ssr_notes.ui-corner-all
  = render 'notes'

#visit_toasts
  - @user_toasts.each do |user_toast|
    .user_toast{:'data-toast_id' => user_toast.id, :'data-message' => user_toast.message}
