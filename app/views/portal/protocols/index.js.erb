// Copyright Â© 2011 MUSC Foundation for Research Development
// All rights reserved.

// Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

// 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.

// 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following
// disclaimer in the documentation and/or other materials provided with the distribution.

// 3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products
// derived from this software without specific prior written permission.

// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,
// BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
// SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
// DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
// TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

if ($('#protocol-accordion').hasClass('ui-accordion')) {
  $('#protocol-accordion').accordion('destroy');
}
$("#protocol-accordion").html("<%= escape_javascript(render(:partial => 'portal/protocols/protocol_list', :locals => {:protocols => @protocols})) %>");
$('#protocol-accordion').accordion({
  heightStyle: 'content',
  collapsible: true,
  active: false
});

<% @source = [] %>
<% @protocols.each do |protocol| %>
  <% default_label = "#{protocol.type.capitalize}: " + protocol.id.to_s + " - " + protocol.short_title %>
  <% default_desc = "PI(s): #{protocol.principal_investigators.map(&:display_name).join(', ')}" if protocol.principal_investigators %>
  <% @source << {:label => default_label, :desc => default_desc, :id => protocol.id } %>
<% end %>

var protocol_autocomplete_values = <%= @source.to_json.html_safe %>;

$('.search_protocols').autocomplete({
  source: protocol_autocomplete_values,
  select: function(event, ui) {
    window.location = '#blue-provider-' + ui.item.id;
    if (!$(".blue-provider-" + ui.item.id).hasClass('ui-state-active')) {
      $(".blue-provider-" + ui.item.id).click();
    }
  }
})
.data("uiAutocomplete")._renderItem = function(ul, item) {
  return $( "<li>" )
        .data( "ui-autocomplete-item", item )
        .append( "<a>" + item.label + "<br>" + item.desc + "</a>" )
        .appendTo( ul );
};

$('.search_protocols').focus(function() {
  $(this).val('');
});


