= form_for @provider, :url => catalog_manager_provider_path, :remote => true, :id => 'entity_form' do |f|
  .errorExplanation#errorExplanation{:style => 'display:none;'}

  = hidden_field_tag 'org_unit[id]', @provider.id # added for autocomplete to use
  = hidden_field_tag 'provider[id]', @provider.id

  #entity_description
    %fieldset.actions
      .legend= t(:organization_form)[:actions]
      = f.submit t(:organization_form)[:submit_button], :id => 'save_button', :class => 'save_button btn provider_program_core_save'
      %img.spinner{:src => '/assets/catalog_manager/spinner_small.gif'}
    %br
  
    %fieldset#gen_info.parent.active
      .legend= t(:organization_form)[:gen_info]
      %fieldset.single_fieldset{:style => "display:block;"}
        %table
          %tr
            %th= t(:organization_form)[:name]
            %td= f.text_field :name
          %tr
            %th= t(:organization_form)[:abbreviation]
            %td= f.text_field :abbreviation
          %tr
            %th= t(:organization_form)[:description] 
            %td= f.text_area :description, :rows => 8
          %tr
            %th= t(:organization_form)[:ack_language]
            %td= f.text_area :ack_language, :rows => 8
          %tr
            %th= t(:organization_form)[:order]
            %td= f.text_field :order
          
          - if @user.is_overlord?
            %tr
              %th= t(:organization_form)[:css_class]
              %td= f.select :css_class, ACCORDION_COLOR_OPTIONS, :include_blank => t(:organization_form)[:color_blank]
          
          %tr
            %th= t(:organization_form)[:split_notify]
            %td= f.check_box :process_ssrs
          %tr
            %th= t(:organization_form)[:disabled]
            %td= f.check_box :is_available, {:checked => (@provider.is_available.nil? ? false : !@provider.is_available) }, false, true
          %tr
            %th= t(:organization_form)[:tag_list]
            %td
              - Tag.all.each do |tag|
                %span{:style => "margin-right:10px;"}
                  %span= f.label tag.name.gsub("ctrc", "Nexus")
                  %span= f.check_box :tag_list, { :multiple => true }, tag.name, nil

    %br

    = render :partial => 'catalog_manager/shared/available_statuses', :locals => {:f => f}

    %fieldset#user_rights.parent
      .legend= t(:organization_form)[:user_rights]
      %fieldset.sibling_fieldset
        .secondary_header= t(:organization_form)[:super_users]
        #su_info= render :partial => 'catalog_manager/shared/super_users', :locals => {:entity => @provider}


      %fieldset.sibling_fieldset
        .secondary_header= t(:organization_form)[:service_providers]
        #sp_info= render :partial => 'catalog_manager/shared/service_providers', :locals => {:entity => @provider}


      %fieldset.sibling_fieldset
        .secondary_header= t(:organization_form)[:cm_rights]
        #cm_info= render :partial => 'catalog_manager/shared/catalog_managers', :locals => {:entity => @provider}


      %fieldset
        .secondary_header= t(:organization_form)[:submission_emails]
        #se_info= render :partial => 'catalog_manager/shared/submission_emails', :locals => {:entity => @provider}

    %br

    %fieldset#pricing.parent
      .legend= t(:organization_form)[:pricing]
      %fieldset.sibling_fieldset
        .secondary_header= t(:organization_form)[:auto_price_adj]
        = render :partial => 'catalog_manager/shared/increase_decrease_rates', :locals => {:entity => @provider, :can_edit_historical_data => @user.can_edit_historical_data_for?(@provider)}
              
      %fieldset.sibling_fieldset
        .secondary_header= t(:organization_form)[:pricing_setup]
        %input.add_pricing_setup{:type => 'button', :value => 'Add Pricing Setup'}
        %br
        .pricing_setup_accordion
          - @provider.pricing_setups.each do |pricing_setup|
            = render :partial => 'catalog_manager/shared/pricing_setup', :locals => {:pricing_setup => pricing_setup, :pricing_setup_disabled => disable_pricing_setup(pricing_setup, @user.can_edit_historical_data_for?(@provider)), :can_edit_historical_data => @user.can_edit_historical_data_for?(@provider), :entity => @provider }

      %fieldset
        .secondary_header= t(:organization_form)[:subsidy_info]
        %table
          = f.fields_for :subsidy_map do |f_subsidy_map|
            %tr
              %th= t(:organization_form)[:subsidy_max_percent]
              %td.subsidy_percentage= f_subsidy_map.text_field :max_percentage
            %tr
              %th= t(:organization_form)[:subsidy_max_dollar]
              %td.subsidy_dollar= f_subsidy_map.text_field :max_dollar_cap
            = render 'catalog_manager/shared/excluded_funding_sources', :entity => @provider
    %br
      
    %fieldset.parent
      .legend= t(:organization_form)[:associated_surveys]
      %fieldset.single_fieldset
        #associated_survey_info= render :partial => 'catalog_manager/shared/associated_surveys', :locals => {:entity => @provider}

    %br

    %fieldset.actions
      .legend= t(:organization_form)[:actions]
      = f.submit t(:organization_form)[:submit_button], :id => 'save_button', :class => 'save_button btn provider_program_core_save'
      %img.spinner{:src => '/assets/catalog_manager/spinner_small.gif'}
      .ui-corner-all.blank_field_errors= t(:organization_form)[:errors]

.blank_pricing_setup
  = render 'catalog_manager/shared/pricing_setup', :pricing_setup_disabled => false, :can_edit_historical_data => @user.can_edit_historical_data_for?(@provider), :entity => @provider

:javascript
  $(document).ready( function() {
    Sparc.config.ready();
    Sparc.config.displayDatesForUser($('.datepicker, .disabled_datepicker'));
  })
