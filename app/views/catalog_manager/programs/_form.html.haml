= form_for @program, :url => catalog_manager_program_path, :remote => true, :id => 'entity_form' do |f|
  .errorExplanation#errorExplanation{:style => 'display:none;'}

  = hidden_field_tag 'org_unit[id]', @program.id # added for autocomplete to use
  = hidden_field_tag 'program[id]', @program.id

  #entity_description
    %fieldset
      %legend= t(:organization_form)[:actions]
      = f.submit t(:organization_form)[:submit_button], :id => 'save_button', :class => 'btn save_button provider_program_core_save'
      %img.spinner{:src => '/assets/catalog_manager/spinner_small.gif'}

    %br

    %fieldset
      %legend= t(:organization_form)[:gen_info]
      %table
        %tr
          %th= t(:organization_form)[:name]
          %td= f.text_field :name
        %tr
          %th= t(:organization_form)[:abbreviation]
          %td= f.text_field :abbreviation
        %tr
          %th= t(:organization_form)[:description]
          %td= f.text_area :description, :rows => 8
        %tr
          %th= t(:organization_form)[:ack_language]
          %td= f.text_area :ack_language, :rows => 8
        %tr
          %th= t(:organization_form)[:order]
          %td= f.text_field :order
        %tr
          %th= t(:organization_form)[:split_notify]
          %td= f.check_box :process_ssrs
        %tr
          %th= t(:organization_form)[:disabled]
          %td= f.check_box :is_available, {:checked => (@program.is_available.nil? ? false : !@program.is_available) }, false, true
        %tr
          %th= t(:organization_form)[:tag_list]
          %td= f.text_field :tag_list

    %br

    = render :partial => 'catalog_manager/shared/available_statuses', :locals => {:f => f}

    %fieldset
      %legend= t(:organization_form)[:submission_emails]
      #se_info= render :partial => 'catalog_manager/shared/submission_emails', :locals => {:entity => @program}
    
    %br
    
    %fieldset
      %legend= t(:organization_form)[:super_users]
      #su_info= render :partial => 'catalog_manager/shared/super_users', :locals => {:entity => @program}
    
    %br
    
    %fieldset
      %legend= t(:organization_form)[:service_providers]
      #sp_info= render :partial => 'catalog_manager/shared/service_providers', :locals => {:entity => @program}
    
    %br
    
    %fieldset
      %legend= t(:organization_form)[:cm_rights]
      #cm_info= render :partial => 'catalog_manager/shared/catalog_managers', :locals => {:entity => @program}

    %br

    %fieldset
      %legend= t(:organization_form)[:clinical_providers]
      #cm_info= render :partial => 'catalog_manager/shared/clinical_providers', :locals => {:entity => @program}
    
    %br
    
    %fieldset
      %legend= t(:organization_form)[:auto_price_adj]
      = render :partial => 'catalog_manager/shared/increase_decrease_rates', :locals => {:entity => @program, :can_edit_historical_data => @user.can_edit_historical_data_for?(@program)}
    
    %br      
    
    %fieldset
      %legend= t(:organization_form)[:pricing_setup]
      %input.add_pricing_setup{:type => 'button', :value => 'Add Pricing Setup'}
      %br
      .pricing_setup_accordion
        - @program.pricing_setups.each do |pricing_setup|
          = render :partial => 'catalog_manager/shared/pricing_setup', :locals => {:pricing_setup => pricing_setup, :pricing_setup_disabled => disable_pricing_setup(pricing_setup, @user.can_edit_historical_data_for?(@program)), :can_edit_historical_data => @user.can_edit_historical_data_for?(@program), :entity => @program }

    %br
    
    %fieldset
      %legend= t(:organization_form)[:subsidy_info]
      %table
        = f.fields_for :subsidy_map do |f_subsidy_map|
          %tr
            %th= t(:organization_form)[:subsidy_max_percent]
            %td= f_subsidy_map.text_field :max_percentage
          %tr
            %th= t(:organization_form)[:subsidy_max_dollar]
            %td= f_subsidy_map.text_field :max_dollar_cap
          = render 'catalog_manager/shared/excluded_funding_sources', :entity => @program
    
    %br
    
    %fieldset
      %legend= t(:organization_form)[:actions]
      = f.submit t(:organization_form)[:submit_button], :id => 'save_button', :class => 'save_button btn provider_program_core_save'
      %img.spinner{:src => '/assets/catalog_manager/spinner_small.gif'}
      .ui-corner-all.blank_field_errors= t("cm_shared.labels.required_list")
      
.blank_pricing_setup
  = render 'catalog_manager/shared/pricing_setup', :pricing_setup_disabled => false, :can_edit_historical_data => @user.can_edit_historical_data_for?(@program), :entity => @program

:javascript
  $(document).ready( function() {
    Sparc.config.ready();
    Sparc.config.displayDatesForUser($('.datepicker, .disabled_datepicker'));
  })
