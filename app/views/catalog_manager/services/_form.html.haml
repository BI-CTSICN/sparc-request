= button_to 'Delete', catalog_manager_service_path(@service), :remote => true, :method => 'delete', :class => 'delete_button', :confirm => "Are you sure you want to delete the service '#{@service.name}'?", :style => 'display:none;', :id => 'delete_button'

= form_for @service, :url => catalog_manager_service_path(@service), :remote => true, :id => 'entity_form' do |f|
  .errorExplanation#errorExplanation{:style => 'display:none;'}

  = hidden_field_tag 'org_unit[id]', @service.id # added for autocomplete to use
  = hidden_field_tag 'service[id]', @service.id
  
  - unless @service.has_service_providers?
    .service_provider_error
      There are no service providers anywhere on this tree.
  
  #entity_description
    .service_form

      %fieldset
        %legend Actions
        = f.submit 'Save', :id => 'save_button', :class => 'save_button btn'
        = image_tag 'catalog_manager/spinner_small.gif', :class => 'spinner'
        %label.btn{:for => 'delete_button'} Delete

      %br

      %fieldset
        %legend General Information
        %table
          %tr
            %th Program
            %td= f.select :program, options_for_select(@programs.map{|p| [p.name, p.id]}, @service.program.id)
          %tr
            %th Core
            %td#core_list= f.select :core, options_for_select(@cores.map{|c| [c.name, c.id]}.insert(0, ['None', 0]), (@service.core.id if @service.core))
          %tr
            %th Name
            %td= f.text_field :name, :class => "service_name validate"
          %tr
            %th Abbreviation
            %td= f.text_field :abbreviation
          %tr
            %th Description
            %td= f.text_area :description, :rows => 8
          %tr
            %th Order
            %td= f.text_field :order, :class => 'service_order validate'
          %tr
            %th Disabled
            %td= f.check_box :is_available, {:checked => (@service.is_available.nil? ? false : !@service.is_available) }, false, true

      %br

      %fieldset
        %legend Core/Facility Based Services
        %table
          %tr
            %th Service Center Cost
            %td= f.text_field :service_center_cost

      %br

      %fieldset
        %legend Hospital Based Services
        %table
          %tr
            %th CPT Code
            %td= f.text_field :cpt_code

          %tr
            %th Charge Code
            %td= f.text_field :charge_code

          %tr
            %th Revenue Code
            %td= f.text_field :revenue_code

      %br

      %fieldset
        %legend Pricing Maps
        %input.add_pricing_map{:type => 'button', :value => 'Add Pricing Map'}
        .pricing_map_accordion
          - @service.pricing_maps.each do |pricing_map|
            = render 'pricing_map', :pricing_map => pricing_map, :pricing_map_disabled => disable_pricing_map(pricing_map, @user.can_edit_historical_data_for?(@service.organization)), :can_edit_historical_data => @user.can_edit_historical_data_for?(@service.organization), :entity => @service

      %br

      %fieldset
        %legend Related Services
        #rs_info= render :partial => 'catalog_manager/shared/related_services', :locals => {:entity => @service}

      %br

      / %fieldset
      /   %legend Service Providers
      /   #sp_info= render :partial => 'catalog_manager/shared/service_providers', :locals => {:entity => @service}
      /
      / %br


      %fieldset
        %legend Actions
        = f.submit 'Save', :id => 'save_button', :class => 'save_button btn'
        = image_tag 'catalog_manager/spinner_small.gif', :class => 'spinner'
        %label.btn{:for => 'delete_button'} Delete
        
        .ui-corner-all.blank_field_errors Name and Order on the Service, and Quantity Type, Unit Factor, Unit Minimum, Effective Date, and Display Date on all Pricing Maps are required.

.blank_pricing_map
  = render 'pricing_map', :pricing_map_disabled => false, :can_edit_historical_data => @user.can_edit_historical_data_for?(@service.organization), :entity => @service

:javascript
  $(document).ready( function() {
    Sparc.config.ready();
    Sparc.services.ready();
    $('.service_name').change();
  })
