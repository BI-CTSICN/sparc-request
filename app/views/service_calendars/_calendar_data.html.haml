= javascript_include_tag 'service_calendar_logic'
= hidden_field_tag :indirect_rate, @service_request.protocol.indirect_cost_rate
%table.service_calendar
  %thead.ui-widget-header
    %tr.table_header
      %th{:rowspan => 2} Services
      %th{:colspan => 2} Unit Costs
      %th{:rowspan => 2} Qty Type
      %th{:rowspan => 2} # Subjects
      %th &nbsp;
      %th{:colspan => 5, :height => 40, :width => 375} 
        = generate_visit_navigation @service_request, @page, @tab if (@sub_service_request.nil? ? @service_request.has_per_patient_per_visit_services? : @sub_service_request.has_per_patient_per_visit_services?)
        
      %th= image_tag 'spinner.gif', :class => 'service_calendar_spinner'

    %tr.table_header
      %th Service Rate
      %th Your Cost
      %th &nbsp;
      - if (@sub_service_request.nil? ? @service_request.has_per_patient_per_visit_services? : @sub_service_request.has_per_patient_per_visit_services?) 
        = generate_visit_header_row @service_request, @page
      - else
        %th{:colspan => 5} &nbsp;
      %th Total

  %tbody.cell-border
    - if (@sub_service_request.nil? ? @service_request.has_per_patient_per_visit_services? : @sub_service_request.has_per_patient_per_visit_services?) 
      %tr.section_header
        %th{:colspan => 12} Per Patient/Visit Services
      - @service_request.service_list(false).each do |key, value| # get only per patient/per visit services and group them
        - next unless @sub_service_request.nil? or @sub_service_request.organization.name == value[:process_ssr_organization_name]
        - if @tab == 'billing_strategy'
          %tr.sub_section_header
            %th{:colspan => 6}= value[:name]
            -5.times do
              %th.billing_type_list
                %span.billing_type R
                %span.billing_type T
                %span.billing_type %
            %th &nbsp;
        - else
          %tr.sub_section_header
            %th{:colspan => 12}= value[:name]

        - value[:line_items].each do |line_item|
          %tr.line_item{:class => cycle('odd', '', :name => 'pppvs')}
            %td.service_name= line_item.service.display_service_name
            %td{:class => "service_rate_#{line_item.id}"}= display_service_rate line_item
            %td.your_cost= display_your_cost line_item
            %td.unit_type= line_item.service.displayed_pricing_map.unit_type
            %td.subject_count= select_tag "line_item_#{line_item.id}_count", options_for_select((1..@service_request.subject_count), line_item.subject_count), :class => 'line_item_visit_count', :update => "/service_requests/#{line_item.service_request_id}/service_calendars?line_item=#{line_item.id}&tab=template"
            %td= select_row line_item, @tab
            - visits = line_item.visits.paginate(:page => @page, :per_page => 5)
            - unit_minimum = line_item.service.displayed_pricing_map.unit_minimum
            - totals_hash = line_item.try(:per_subject_subtotals)
            - visits.each_with_index do |v, index|
              %td.visit{:visit_column => index + 1, :class => "visit_column_#{index + 1}", :'data-cents' => (totals_hash["#{v.id}"] || 0), :style => (@tab == 'template' ? "text-align:center" : '')}= line_item_visit_input line_item, v, @tab, totals_hash, unit_minimum
            - (5 - visits.size).times do
              %td &nbsp;
            %td{:class => "total_#{line_item.id}"}= display_visit_based_direct_cost line_item
      
      %tr.totals_section.begin_totals{:class => cycle('odd', '', :name => 'pppvs')}
        %td{:colspan => 5} Maximum Total Direct Costs Per Patient
        %td &nbsp;
        - 5.times do |i|
          %td{:class => "visit_column_#{i + 1} max_direct_per_patient"}
        %td{:class => "pp_max_total_direct_cost"}= display_max_total_direct_cost_per_patient @service_request, @line_items
      
      %tr.totals_section{:class => cycle('odd', '', :name => 'pppvs')}
        %td{:colspan => 5} Maximum Total Indirect Costs Per Patient
        %td &nbsp;
        - 5.times do |i|
          %td{:class => "visit_column_#{i + 1} max_indirect_per_patient"}
        %td{:class => "pp_max_total_indirect_cost"}= display_max_total_indirect_cost_per_patient @service_request, @line_items

      %tr.totals_section{:class => cycle('odd', '', :name => 'pppvs')}
        %td{:colspan => 5} Maximum Total Per Patient
        %td &nbsp;
        - 5.times do |i|
          %td{:class => "visit_column_#{i + 1} max_total_per_patient"}
        %td{:class => "pp_max_total"}= display_max_total_cost_per_patient @service_request, @line_items
      
      %tr.totals_section{:class => cycle('odd', '', :name => 'pppvs')}
        %td{:colspan => 5} Total Direct Costs (Per Patient/Visit Services) Per Study
        %td{:colspan => 6}
        %td{:class => "pp_total_direct_cost"}= display_total_direct_cost_per_study_pppvs @service_request, @line_items
      
      %tr.totals_section{:class => cycle('odd', '', :name => 'pppvs')}
        %td{:colspan => 5} Total Indirect Costs (Per Patient/Visit Services) Per Study
        %td{:colspan => 6}
        %td{:class => "pp_total_indirect_cost"}= display_total_indirect_cost_per_study_pppvs @service_request, @line_items
      
      %tr.totals_section.total-visit-based-services{:class => cycle('odd', '', :name => 'pppvs')}
        %td{:colspan => 5} Total Costs (Per Patient/Visit Services) Per Study
        %td{:colspan => 6}
        %td{:class => "pp_total_cost"}= display_total_cost_per_study_pppvs @service_request, @line_items

      %th.totals_section{:colspan => 12} &nbsp;

    - if (@sub_service_request.nil? ? @service_request.has_one_time_fee_services? : @sub_service_request.has_one_time_fee_services?)
      %tr.section_header
        %th{:colspan => 12} Other Services
      - @service_request.service_list(true).each do |key, value| # get only one time fee services and group them
        - next unless @sub_service_request.nil? or @sub_service_request.organization.name == value[:process_ssr_organization_name]
        %tr.sub_section_header
          %th{:colspan => 12}= value[:name]
          - value[:line_items].each do |line_item|
            %tr.line_item{:class => cycle('odd', '', :name => 'otfs')}
              %td.service_name= line_item.service.name
              %td{:class => "service_rate_#{line_item.id}"}= display_service_rate line_item
              %td.your_cost= display_your_cost line_item
              %td{:colspan => 8}
              %td{:class => "total_#{line_item.id}"}= display_one_time_fee_direct_cost line_item
      
      %tr.totals_section.begin_totals{:class => cycle('odd', '', :name => 'otfs')}
        %td{:colspan => 5} Total Direct Costs (other) Per Study
        %td{:colspan => 6}
        %td.otf_total_direct_cost= display_total_direct_cost_per_study_otfs @service_request, @line_items

      %tr.totals_section{:class => cycle('odd', '', :name => 'otfs')}
        %td{:colspan => 5} Total Indirect Costs (other) Per Study
        %td{:colspan => 6}
        %td.otf_total_indirect_cost= display_total_indirect_cost_per_study_otfs @service_request, @line_items

      %tr.totals_section{:class => cycle('odd', '', :name => 'otfs')}
        %td{:colspan => 5} Total Costs (other) Per Study
        %td{:colspan => 6}
        %td.otf_total_cost= display_total_cost_per_study_otfs @service_request, @line_items

      %th.totals_section{:colspan => 12} &nbsp;

    %tr.section_header
      %th{:colspan => 12} Total Study Costs

      %tr.totals_section{:class => cycle('odd', '', :name => 'totals')}
        %td{:colspan => 5} Grand Total: Direct Costs
        %td{:colspan => 6}
        %td{:class => 'grand_total_direct'}= display_grand_total_direct_costs @service_request, @line_items

      %tr.totals_section{:class => cycle('odd', '', :name => 'totals')}
        %td{:colspan => 5} Grand Total: Indirect Costs
        %td{:colspan => 6}
        %td{:class => 'grand_total_indirect'}= display_grand_total_indirect_costs @service_request, @line_items

      %tr.totals_section{:class => cycle('odd', '', :name => 'totals')}
        %td{:colspan => 5} Grand Total:
        %td{:colspan => 6}
        %td{:class => 'grand_total'}= display_grand_total @service_request, @line_items
