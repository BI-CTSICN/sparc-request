wb = xlsx_package.workbook

wb.add_worksheet(name: "Audit report") do |sheet|
  default_style = sheet.styles.add_style(:alignment => {:horizontal => :left})

  styles = {:default_style => default_style}

  # sctr logo
  img = Rails.root.join("app/assets/images/sctr_logo.png").to_s
  sheet.add_image(:image_src => img, :noSelect => true, :noMove => true, :hyperlink=>"http://sctr.musc.edu") do |image|
    image.width = 479
    image.height = 227
    image.hyperlink.tooltip = "Click to visit SCTR website"
    image.start_at 0, 0
  end
  
  #start text below the image
  16.times {sheet.add_row [""]}
 
  # default method to handle audit
  def audit_output audit, sheet, styles
    added = false

    # def audit_excluded_actions on individual models to exclude them from showing up
    if audit.auditable.respond_to? :audit_excluded_actions
      return false if audit.auditable.audit_excluded_actions.include? audit.action
    end

    audit.audited_changes.each do |field, values|

      if audit.auditable.respond_to? :audit_excluded_fields
        next if audit.auditable.audit_excluded_fields[audit.action] and audit.auditable.audit_excluded_fields[audit.action].include? field
      end

      change = values
      next if change.blank?

      if values.is_a?(Array) 
        from, to = values
        next if from.blank? and to.blank? 

        if audit.auditable.respond_to?(:audit_field_value_mapping) and audit.auditable.audit_field_value_mapping[field]
          method = audit.auditable.audit_field_value_mapping[field]
          
          unless to.blank?
            new_method = method.gsub(/ORIGINAL_VALUE/, to.to_s)
            to = eval(new_method)
          end

          unless from.blank?
            new_method = method.gsub(/ORIGINAL_VALUE/, from.to_s)
            from = eval(new_method)
          end
        end

        change = from.blank? ? to : "#{from} => #{to}"
      end

      added = true

      row = []
      row << audit.user.try(:full_name)
      row << audit.created_at.strftime("%m/%d/%Y")
      row << audit.created_at.strftime("%I:%M %P")
      
      if audit.auditable.respond_to? :audit_label
        row << audit.auditable.audit_label(audit)
      else
        row << "#{audit.auditable_type.humanize} #{audit.auditable_id}"
      end

      row << audit.action.humanize

      if audit.auditable.respond_to? :audit_field_replacements
        # use audit_field_replacements if model has them
        audit_field_replacements = audit.auditable.audit_field_replacements

        if audit_field_replacements[field]
          row << audit_field_replacements[field]
        else
          row << field.humanize.upcase
        end
      else
        # default action
        row << field.humanize.upcase
      end

      row << change
      sheet.add_row row, :style => styles[:default_style]
    end

    added
  end

  @audit_trail.each do |audit|
    if audit.auditable.respond_to? :audit_output
      # use method defined in model
      response = audit.auditable.audit_output audit, sheet, styles
    else
      # use default action above
      response = audit_output audit, sheet, styles
    end

    sheet.add_row [""] if response
  end
end
