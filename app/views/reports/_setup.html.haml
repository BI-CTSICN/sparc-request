= form_tag generate_reports_path do
  = hidden_field_tag :report, @report.class.name
  %h2= @report.title

  %br
  %br

  - @report.options.each do |field,options|
    - field_type = options[:field_type] || 'text_field_tag'
    - field_label = options[:field_label] || field.to_s.titleize

    /* TODO - extract these into either helpers or a custom form builder */
    /* select_tag */
    - if field_type == :select_tag
      - if field.is_a? Class and field.respond_to?(:where) # we have a select tag that we need to get records for
        - records = field.where(options[:filters])
        - dependency = options[:dependency]
        - default_classes = "reporting_field"
        - check_dep_class = dependency ? 'check_dep_class' : nil
        - name_and_id = "#{field.name.underscore}_id"

        %label{:for => name_and_id}= field_label
        %select{:"data-dependency" => dependency, :class => [default_classes, check_dep_class].join(" "), :name => name_and_id, :id => name_and_id}
          %option{:value => ""} Select One
          - records.each do |record|
            - next if record.respond_to?(:is_available) and not record.is_available?
            - option_class = nil
            - if dependency
              - dependency_id = options[:dependency_id] || dependency.sub(/^#/, "") # either an id is specified or we assume the dependency is the id
              - if record.respond_to? dependency_id
                - option_class = "sub-#{record.send dependency_id}"
            %option{:value => record.id, :class => option_class}= record.name
    /* end select_tag */

    /* date_range */
    - if field_type == :date_range
      %label= field_label
      %br
      %br

      /* from information */
      - from_id = field.delete(" ").underscore + "_from"
      - from_name = options[:for] ? options[:for] + "_from" : from_id
      - from_label = options[:from_label] || "From"
      - from_date = options[:from] ? options[:from].strftime('%B %d, %Y %H:%M:%S') : nil

      /* to information */
      - to_id = field.delete(" ").underscore + "_to"
      - to_name = options[:for] ? options[:for] + "_to" : to_id
      - to_label = options[:to_label] || "To"
      - to_date = options[:to] ? options[:to].strftime('%B %d, %Y %H:%M:%S') : nil


      %label{:for => from_id}= from_label
      = text_field_tag from_name, nil, :id => from_id, :"data-from" => from_date

      %br
      %br
    
      %label{:for => to_id}= to_label
      = text_field_tag to_name, nil, :id => to_id, :"data-to" => to_date
    /* end date_range */
    
    %br
    %br

  /* submit button */
  = submit_tag t(:reports)[:create_report]

  %br
  %br
