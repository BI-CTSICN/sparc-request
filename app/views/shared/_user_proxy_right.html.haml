-# TODO - should these be defined in the view
- identity = project_role.identity
- field_name = "#{session[:protocol_type]}[project_roles_attributes][#{identity.id}]"
- parent_class = "project_role_#{identity.id}"

= fields_for field_name, project_role do |f|
  %tr{:class => parent_class}
    %td
      = "#{identity.first_name} #{identity.last_name}"
      = f.hidden_field "_destroy"
      = f.hidden_field :id
      = f.hidden_field :identity_id
      = f.hidden_field :role 
      = f.hidden_field :role_other
      = f.hidden_field :protocol_id
    %td 
      .actions
        = link_to image_tag('pencil.png'), 'javascript:void(0)', :class => 'edit_project_role', :parent => parent_class, :identity_id => identity.id
        = link_to image_tag('cancel.png'), 'javascript:void(0)', :class => 'remove_project_role', :parent => parent_class unless identity == current_user
      .restore{:style => 'display:none;'}
        = link_to image_tag('arrow_undo.png'), 'javascript:void(0)', :class => 'restore_project_role', :parent => parent_class
    %td= USER_ROLES.invert[project_role.role]
    %td
      .epic_access
        = f.radio_button :epic_access, false, :checked => !project_role.epic_access, :project_role_id => project_role.id, :class => "epic_access_radio_no"
        = f.label :epic_access, 'No'
        = f.radio_button :epic_access, true, :checked => project_role.epic_access, :project_role_id => project_role.id, :class => "epic_access_radio_yes", :id => "epic_access_yes_#{project_role.id}"
        = f.label :epic_access, 'Yes'
        = link_to image_tag('pencil.png'), 'javascript:void(0)', :project_role_id => project_role.id, :class => 'epic_access_edit'
    %td= f.radio_button :project_rights, 'none', :checked => project_role.should_select?('none', current_user), :disabled => !project_role.can_switch_to?('none', current_user)
    %td= f.radio_button :project_rights, 'view', :checked => project_role.should_select?('view', current_user), :disabled => !project_role.can_switch_to?('view', current_user)
    %td= f.radio_button :project_rights, 'request', :checked => project_role.should_select?('request', current_user), :disabled => !project_role.can_switch_to?('request', current_user)
    %td= f.radio_button :project_rights, 'approve', :checked => project_role.should_select?('approve', current_user), :disabled => !project_role.can_switch_to?('approve', current_user)

  .epic_access_dialog{:id => "project_role_#{project_role.id}", :style => "display:none"}
    Check All That Apply:
    = f.fields_for :epic_rights do |fer|
      .pair
        = fer.check_box "_destroy", {:checked => !fer.object.new, :class => 'epic_access_check_box'}, false, true
        = fer.hidden_field :right, :value => fer.object.right
        = fer.label "_destroy", EPIC_RIGHTS[fer.object.right]

    %br
    %div.epic_rights_info= "#{EPIC_RIGHTS_INFO}"