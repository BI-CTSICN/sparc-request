# Copyright Â© 2011 MUSC Foundation for Research Development
# All rights reserved.

# Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

# 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.

# 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following
# disclaimer in the documentation and/or other materials provided with the distribution.

# 3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products
# derived from this software without specific prior written permission.

# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,
# BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
# SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
# TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

wb = xlsx_package.workbook

wb.add_worksheet(name: "Admin Billing Report") do |sheet|
  sheet.add_row ["From", @start, "To", @end]

  sheet.add_row [""]
  sheet.add_row [""]

  sheet.add_row ["Protocol ID", "Primary PI", "Patient Name", "Patient ID", "Arm", "Visit", "Visit Date", "Nexus Core", "Service Due", "Research Quantity Due", "Full Quantity Completed?", "Other Quantity Completed", "New Service Added", "New Service Quantity Completed", "Unit Cost"]

  @appointments.each do |appt|
    visit_name = appt.name_switch
    visit_date = appt.formatted_completed_date 
    core = appt.organization.label
    arm = appt.visit_group.arm
    protocol = arm.protocol
    subject = appt.calendar.subject

    appt.procedures.each do |procedure|
      next unless procedure.should_be_displayed
      service_name = procedure.try(:line_item).try(:service).try(:name)
      added_service_name = procedure.try(:service).try(:name)
      r_qty = procedure.r_quantity

      service_added_qty = added_service_name.blank? ? "" : (r_qty || 0)

      quantity_due = procedure.try(:visit).try(:research_billing_qty)

      full_quantity_completed = ""

      if added_service_name.blank?
        full_quantity_completed = (quantity_due == r_qty and procedure.completed?) ? "Y" : "N"
      end
      
      service_qty = (service_name.blank? or full_quantity_completed == 'Y' or not procedure.completed?) ? "" : r_qty

      sheet.add_row [protocol.id, protocol.try(:primary_principal_investigator).try(:full_name), subject.name, subject.label, arm.name, visit_name, visit_date, core, service_name, quantity_due, full_quantity_completed, service_qty, added_service_name, service_added_qty, procedure.cost]
    end
  end
end
