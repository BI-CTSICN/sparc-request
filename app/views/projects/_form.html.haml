/////////////////////////////////////////////
//
// PROJECT - Form for New/Editing Projects
//
/////////////////////////////////////////////

= form_for @protocol, :remote => true do |f|
  .grid_12
    %h3.blue-provider.step-header.ui-corner-all= @current_step == 'protocol' ? t(:protocol_shared)[:step_text] : t(:protocol_shared)[:step_text_2]
  = f.hidden_field :requester_id
  = hidden_field_tag :current_step, @current_step
  .clear
  - if @errors
    #errorExplanation.errorExplanation
      %h2
        = pluralize(@errors.values.map(&:count).sum, "error")
        prohibited this
        = @protocol.type.downcase
        from being saved
      %ul
        - @errors.each do |key, msgs|
          - msgs.each do |msg|
            %li
              = key.to_s.humanize unless key == :base # manually added errors should be ignored
              = msg
  .edit-project-view= render :partial => 'projects/fields', :locals => {:project => project, :f => f}
  .continue
    .grid_12
      %div{:class => 'blue-provider'}
        .nav-backward
          .return-to-previous
            - if @current_step == "user_details"
              = link_to image_tag('GoBack.png') + t(:bottom_navigation)[:go_back], protocol_service_request_path(service_request), :alt => "Go Back"
            -else
              = link_to image_tag('GoBack.png') + t(:bottom_navigation)[:cancel], protocol_service_request_path(service_request), :alt => "Cancel"
        .exit= image_tag('Filler.png')
        .nav-forward
          .save-and-continue
            %input{:type => 'image', :src => '/assets/ContinueOld.png', :alt => "SaveAndContinue"}
