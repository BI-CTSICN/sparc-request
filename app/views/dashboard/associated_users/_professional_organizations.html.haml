- state = professional_organization_state(professional_organization)
.professional-organization-form
  = fields_for(:project_role) do |pr_form|
    = pr_form.fields_for(:identity_attributes) do |identity_form|
      - state[:dont_submit_selected].each do |prev_selected_pro_org|
        = user_form_group(name: prev_selected_pro_org.org_type, label: org_type_label(prev_selected_pro_org)) do
          = select_tag(prev_selected_pro_org.org_type,
                       options_from_collection_for_select(prev_selected_pro_org.self_and_siblings, 'id', 'name', prev_selected_pro_org.id),
                       include_blank: t(:authorized_users)[:form_fields][:select_one],
                       class: 'form-control selectpicker')
      - unless state[:dont_submit_unselected].empty?
        = user_form_group(name: state[:dont_submit_unselected].first.org_type, label: org_type_label(state[:dont_submit_unselected].first)) do
          = select_tag(state[:dont_submit_unselected].first.org_type,
            options_from_collection_for_select(state[:dont_submit_unselected], 'id', 'name'),
            include_blank: t(:authorized_users)[:form_fields][:select_one],
            class: 'form-control selectpicker')
      - if state[:submit_selected]
        = user_form_group(name: :professional_organization_id, label: org_type_label(state[:submit_selected]), form: identity_form) do
          = identity_form.select :professional_organization_id,
                                 options_from_collection_for_select(state[:submit_selected].self_and_siblings, 'id', 'name', state[:submit_selected].id),
                                 { include_blank: t(:authorized_users)[:form_fields][:select_one] },
                                 class: 'form-control selectpicker'
