# Copyright Â© 2011 MUSC Foundation for Research Development
# All rights reserved.

# Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

# 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.

# 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following
# disclaimer in the documentation and/or other materials provided with the distribution.

# 3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products
# derived from this software without specific prior written permission.

# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,
# BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
# SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
# TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

def sum(columns, current_row)
  "(#{columns.map { |c| c + current_row.to_s }.join('+')})"
end


wb = xlsx_package.workbook
default = wb.styles.add_style alignment: { horizontal: :left }
bold_default = wb.styles.add_style alignment: {horizontal: :left}, b: true
# centered = wb.styles.add_style alignment: { horizontal: :center }
# bordered = wb.styles.add_style :border=> {:style => :thin, :color => "00000000"}
# centered_bordered = wb.styles.add_style :border => {:style => :thin, :color => "00000000"}, :alignment => {:horizontal => :center}
money = wb.styles.add_style :format_code => '$* #,##0.00_);[Red]-$*#,###.00;$* -??_;'
bold_money = wb.styles.add_style :format_code => '$#,##0.00_);[Red]-$#,###.00;$* -??_;', b: true
percent = wb.styles.add_style :format_code => '0.00\%', b: true, alignment: { horizontal: :left }
row_header_style = wb.styles.add_style b: true
header_style = wb.styles.add_style sz: 12, b: true, bg_color: '0099FF', fg_color: 'FFFFFF', alignment: { horizontal: :left, wrap_text: true}
sub_header_style = wb.styles.add_style sz: 12, b: true, bg_color: 'ADADAD', alignment: { horizontal: :left }
org_header_style = wb.styles.add_style sz: 12, b: true, bg_color: 'CCCCCC', alignment: { horizontal: :left }

arm_nr_totals = {}
arm_r_totals = {}

# Page for each arm
@protocol.arms.each do |arm|
  wb.add_worksheet(name: "#{arm.sanitized_name}") do |sheet|

    #Repeating protocol information on the top of each page
    protocol_header_row = ["#{@protocol.class.to_s} Information"] + [""] * (5 + (arm.visit_groups.count * 2) + 2)
    sheet.add_row protocol_header_row, :style => header_style
    sheet.add_row ["SPARC #{@protocol.class.to_s} ID:",@protocol.id], :style => default
    sheet.add_row ["RMID:", @protocol.research_master_id]
    sheet.add_row ["Short Title:",@protocol.short_title], :style => default
    sheet.add_row ["Primary PI Name:", @protocol.primary_principal_investigator.full_name], :style => default
    sheet.add_row ["Indirect Cost Rate:", @protocol.indirect_cost_rate]
    sheet.add_row []
    sheet.add_row ["#{arm.name}: Subject Count", arm.subject_count]

    #Header Section
    arm_header_row = ["Selected Services", "CPT Code", "Status", "Sponsor Unit Cost (Service Rate or Negotiated Reimbursement)", "Research Cost (Your Cost)", "# of Subjects"]
    arm_label_row = [arm.sanitized_name, "", "", "", "", ""]
    label_row = ["", "", "", "", "", ""]
    cells_to_merge = []
    arm_start = sheet.rows.length
    #Column headers and labels for each visit_group, meaning each visit / appointment
    arm.visit_groups.each_with_index do |vg, index|
      arm_header_row += [vg.name, ""]
      arm_label_row += [vg.day, ""]
      label_row += ["R", "T"]
      last_group = arm_header_row.length - 2
      cells_to_merge << {from: Axlsx::cell_r(last_group, arm_start), to: Axlsx::cell_r(last_group + 1, arm_start)}
      cells_to_merge << {from: Axlsx::cell_r(last_group, arm_start+1), to: Axlsx::cell_r(last_group + 1, arm_start+1)}
    end

    arm_header_row += ["Total Sponsor Unit Cost Per Patient", "Total Research Cost Per Patient"]
    arm_label_row += ["", ""]

    sheet.add_row arm_header_row, :style => header_style

    # Fetch a bunch of columns
    total_nr_per_patient_column = sheet.rows.last.cells[-5].r[/([A-Z]+)/]
    total_research_amount_column = sheet.rows.last.cells[-4].r[/([A-Z]+)/]
    number_of_subjects_column = sheet.rows.last.cells[-3].r[/([A-Z]+)/]
    total_nr_per_study_column = sheet.rows.last.cells[-2].r[/([A-Z]+)/]
    total_r_cost_per_study_column = sheet.rows.last.cells[-1].r[/([A-Z]+)/]

    sheet.add_row arm_label_row, :style => sub_header_style

    cells_to_merge.each do |cells|
      sheet.merge_cells "#{cells[:from]}:#{cells[:to]}"
    end

    n_columns = sheet.rows.last.cells.drop(6).each_slice(3).map { |cs| cs[0].r[/([A-Z]+)/] }
    binding.pry

    # When moving/adding columns, make sure these match up
    # column F "Research Cost (Your Cost)"
    research_cost_column = "F"
    # column D "Negotiated Reimbursement (NR)"
    negotiated_reimbursement_column = "D"

    sheet.add_row label_row.flatten, :style => default

    #Displays line_items_visits, grouped by organization from the sub service request
    arm.line_items_visits.includes(:line_item).group_by{|liv| liv.line_item.sub_service_request}.each do |sub_service_request, line_items_visits|
      next if @statuses_hidden.include?(sub_service_request.status)
      sheet.add_row ["#{sub_service_request.organization.name}(#{sub_service_request.ssr_id})"] + [""] * (5 + (arm.visit_groups.count * 2) + 2), style: org_header_style

      current_row = sheet.rows.length + 1
      line_items_visits.each do |liv|
        @line_item_style_array = [default, default, default, money, money, money]
        n_columns_sum = sum(n_columns, current_row)
        nr_cell = "#{negotiated_reimbursement_column}#{current_row}"
        your_cost_cell = "#{research_cost_column}#{current_row}"
        total_nr_cell = total_nr_per_patient_column + current_row.to_s
        total_research_amount_cell = total_research_amount_column + current_row.to_s
        number_of_subjects_cell = number_of_subjects_column + current_row.to_s
        line_item_row = [liv.line_item.service.name, liv.line_item.service.cpt_code, liv.line_item.sub_service_request.status.humanize.titleize, "0", cents_to_dollars(liv.line_item.service.current_effective_pricing_map.full_rate), cents_to_dollars(liv.line_item.applicable_rate)]
        liv.ordered_visits.each_with_index do |visit, index|
          n_cell = n_columns[index] + current_row.to_s
          line_item_row << [visit.research_billing_qty, "=#{nr_cell} * #{n_cell}", "=#{your_cost_cell} * 1"]
          @line_item_style_array << [default, money, money]
        end
        line_item_row << ["=#{nr_cell} * #{n_columns_sum}",
          "=#{your_cost_cell} * #{n_columns_sum}",
          liv.subject_count,
          "=#{total_nr_cell} * #{number_of_subjects_cell}",
          "=#{total_research_amount_cell} * #{number_of_subjects_cell}"]
        @line_item_style_array << [money, money, default, money, money]
        @line_item_style_array.flatten!
        sheet.add_row line_item_row.flatten, :style => @line_item_style_array
        current_row += 1
      end
    end

    sheet.add_row
    sheet.add_row
    principle_row_no = sheet.rows.length + 2

    additional_row = ["Additional Services and Study Team Assessments", "", "", "", "", ""]
    principle_row = ["Principle Investigator", "", "", "0", "", "0"]
    coordination_row = ["Study Coordination/Data Management", "", "", "0", "", "0"]
    regulatory_row = ["Regulatory Processing", "", "", "0", "", "0"]
    financial_row = ["Financial Management", "", "", "0", "", "0"]
    bottom_totals = ["Total Per Visit", "", "", "", "", ""]

    arm.visit_groups.each_with_index do |vg, idx|
      additional_row << ["", "", ""]
      principle_row << ["0", "=#{negotiated_reimbursement_column}#{principle_row_no} * #{n_columns[idx]}#{principle_row_no}", "=#{research_cost_column}#{principle_row_no} * #{n_columns[idx]}#{principle_row_no}"]
      coordination_row << ["0", "=#{negotiated_reimbursement_column}#{principle_row_no + 1} * #{n_columns[idx]}#{principle_row_no + 1}", "=#{research_cost_column}#{principle_row_no + 1} * #{n_columns[idx]}#{principle_row_no + 1}"]
      regulatory_row << ["0", "=#{negotiated_reimbursement_column}#{principle_row_no + 2} * #{n_columns[idx]}#{principle_row_no + 2}", "=#{research_cost_column}#{principle_row_no + 2} * #{n_columns[idx]}#{principle_row_no + 2}"]
      financial_row << ["0", "=#{negotiated_reimbursement_column}#{principle_row_no + 3} * #{n_columns[idx]}#{principle_row_no + 3}", "=#{research_cost_column}#{principle_row_no + 3} * #{n_columns[idx]}#{principle_row_no + 3}"]
      bottom_totals << ["",
        "",
        ""]
    end

    principle_row << ["=#{negotiated_reimbursement_column}#{principle_row_no} * #{sum(n_columns, principle_row_no)}",
      "=#{research_cost_column}#{principle_row_no} * #{sum(n_columns, principle_row_no)}",
      arm.subject_count,
      "=#{total_nr_per_patient_column}#{principle_row_no} * #{number_of_subjects_column}#{principle_row_no}",
      "=#{total_research_amount_column}#{principle_row_no} * #{number_of_subjects_column}#{principle_row_no}"]
    coordination_row << ["=#{negotiated_reimbursement_column}#{principle_row_no+1} * #{sum(n_columns, principle_row_no+1)}",
      "=#{research_cost_column}#{principle_row_no+1} * #{sum(n_columns, principle_row_no+1)}",
      arm.subject_count,
      "=#{total_nr_per_patient_column}#{principle_row_no+1} * #{number_of_subjects_column}#{principle_row_no+1}",
      "=#{total_research_amount_column}#{principle_row_no+1} * #{number_of_subjects_column}#{principle_row_no+1}"]
    regulatory_row << ["=#{negotiated_reimbursement_column}#{principle_row_no+2} * #{sum(n_columns, principle_row_no+2)}",
      "=#{research_cost_column}#{principle_row_no+2} * #{sum(n_columns, principle_row_no+2)}",
      arm.subject_count,
      "=#{total_nr_per_patient_column}#{principle_row_no+2} * #{number_of_subjects_column}#{principle_row_no+2}",
      "=#{total_research_amount_column}#{principle_row_no+2} * #{number_of_subjects_column}#{principle_row_no+2}"]
    financial_row << ["=#{negotiated_reimbursement_column}#{principle_row_no+3} * #{sum(n_columns, principle_row_no+3)}",
      "=#{research_cost_column}#{principle_row_no+3} * #{sum(n_columns, principle_row_no+3)}",
      arm.subject_count,
      "=#{total_nr_per_patient_column}#{principle_row_no+3} * #{number_of_subjects_column}#{principle_row_no+3}",
      "=#{total_research_amount_column}#{principle_row_no+3} * #{number_of_subjects_column}#{principle_row_no+3}"]
    bottom_totals << ["=SUM(#{total_nr_per_patient_column}1:#{total_nr_per_patient_column}#{principle_row_no+3})",
      "=SUM(#{total_research_amount_column}1:#{total_research_amount_column}#{principle_row_no+3})",
      arm.subject_count,
      "=SUM(#{total_nr_per_study_column}1:#{total_nr_per_study_column}#{principle_row_no+3})",
      "=SUM(#{total_r_cost_per_study_column}1:#{total_r_cost_per_study_column}#{principle_row_no+3})"]

    sheet.add_row additional_row.flatten, :style => org_header_style
    sheet.add_row principle_row.flatten, :style => @line_item_style_array
    sheet.add_row coordination_row.flatten, :style => @line_item_style_array
    sheet.add_row regulatory_row.flatten, :style => @line_item_style_array
    sheet.add_row financial_row.flatten, :style => @line_item_style_array
    sheet.add_row bottom_totals.flatten, :style => @line_item_style_array

    arm_summary_row = ["#{arm.sanitized_name}: Summary", "", "", "Negotiated Costs", "", "Research Cost"]
    ((arm.visit_groups.count * 3) + 5).times {arm_summary_row << ""}
    sheet.add_row arm_summary_row, :style => header_style
    sheet.add_row ["#{arm.sanitized_name}: Total Direct Costs",
      "",
      "",
      "=#{total_nr_per_study_column}#{principle_row_no+4}",
      "",
      "=#{total_r_cost_per_study_column}#{principle_row_no+4}"], :style => [default, default, default, money, default, money]
    grand_totals_row = sheet.rows.length
    arm_nr_totals[arm.sanitized_name] = "#{negotiated_reimbursement_column}#{grand_totals_row}"
    arm_r_totals[arm.sanitized_name] = "#{research_cost_column}#{grand_totals_row}"
    sheet.column_widths *( [40, 20, 10, 18, 18, 18] + ( [12] * arm.visit_groups.count * 2 ) + [18, 18] )
  end
end


wb.insert_worksheet(0, name: "Summary") do |sheet|
  sheet.add_row ["#{@protocol.class.to_s} Information", "", "", "", "", "", "", ""], :style => header_style

  sheet.add_row ["SPARC #{@protocol.class.to_s} ID:", @protocol.id], :style => [bold_default, default]
  sheet.add_row ["RMID:", @protocol.research_master_id], style: [bold_default, default]
  sheet.add_row ["Short Title:", @protocol.short_title], :style => [bold_default, default]
  sheet.add_row ["Protocol Title:", @protocol.title], :style => [bold_default, default]
  sheet.add_row ["Sponsor:", @protocol.sponsor_name], :style => [bold_default, default]
  sheet.add_row ["Primary PI Name:", @protocol.primary_principal_investigator.full_name], :style => [bold_default, default]
  sheet.add_row ["Business Manager:", @protocol.billing_managers.map(&:full_name).try(:join, ', ')], :style => [bold_default, default]
  sheet.add_row ["Funding Source:", @protocol.display_funding_source_value], :style => [bold_default, default]
  sheet.add_row ["Indirect Cost Rate:", @protocol.indirect_cost_rate], style: [bold_default, percent]

  indirect_cost_rate_row = sheet.rows.length

  sheet.add_row []

  sheet.add_row ["Authorized Users", "", "", "", "", "", "", ""], style: header_style
  sheet.add_row ["Name", "Role", "Institutional Base Salary", "% Effort", "Project Period (in months)", "Salary Requested", "Fringe", "Total"]

  current_row = sheet.rows.length
  authorized_users_start_row = current_row

  @protocol.project_roles.each do |pr|
    current_row += 1
    sheet.add_row [pr.identity.full_name, PermissibleValue.get_value('user_role', pr.role), "0", "", "", "0", "0", "=SUM(F#{current_row}:G#{current_row})"], style: [default, default, money, percent, default, money, money, money]
  end

  authorized_users_end_row = current_row

  sheet.add_row []
  sheet.add_row ["Total" , "", "", "", "", "=SUM(F#{authorized_users_start_row}:F#{authorized_users_end_row})", "=SUM(G#{authorized_users_start_row}:G#{authorized_users_end_row})", "=SUM(H#{authorized_users_start_row}:H#{authorized_users_end_row})"], style: money
  total_users_cost_cell = "H#{sheet.rows.length}"
  sheet.add_row []

  sheet.add_row ["Protocol Arms", "", "", "", "", "", "", ""], :style => header_style
  sheet.add_row ["Arm", "", "# of Subjects", "# of Visits", "", "", "", ""], :style => sub_header_style

  @protocol.arms.each do |arm|
    sheet.add_row [arm.sanitized_name, "", arm.subject_count, arm.visit_count, "", "", ""], :style => default
  end
  sheet.add_row []

  sheet.add_row ["Other Services", "", "Sponsor Unit Cost (Service Rate or Negotiated Reimbursement)", "Research Cost (Your Cost)", "Procedure Occurence (N)", "F&A Applies?", "Total Cost to Sponsor (+OH)", "Margin to Cover Personnel Effort", ""], :style => header_style
  sheet.add_row ["Study Level Services (Pass Through)", "Status", "", "", "", "", "", ""], :style => sub_header_style

  current_row = sheet.rows.length
  other_services_start_row = current_row

  ["PI Start Up", "Administrative Start Up", "IDS Annual Review"].each do |service|
    current_row += 1
    sheet.add_row [service, "", "0", "0", "1", "Y", "=IF(F#{current_row}=\"Y\",(C#{current_row}*E#{current_row})*(1+($B$#{indirect_cost_rate_row}/100)),C#{current_row}*E#{current_row})", "=(C#{current_row}-D#{current_row})*E#{current_row}"], style: [default, default, money, money, default, money, money, money]
  end

  @protocol.service_requests.each do |sr|
    sr.line_items.includes(:service).where(services: {one_time_fee: true}).each do |li|
      next if @statuses_hidden.include?(li.sub_service_request.status)
      li_row = sheet.rows.length + 1
      sheet.add_row ["#{li.service.name} (#{li.sub_service_request.ssr_id})", "#{li.sub_service_request.status.humanize.titleize}", "0", cents_to_dollars(li.applicable_rate), li.quantity, "=C#{li_row}*E#{li_row}", "=D#{li_row}*E#{li_row}"], :style => [default, default, money, money, default, money, money]
    end
  end
  sheet.add_row []
  previous_row = sheet.rows.length
  sheet.add_row ["Study Level Services: Total Cost", "", "", "", "", "", "=Sum(G#{other_services_start_row}:G#{previous_row})", "=SUM(H#{other_services_start_row}:H#{previous_row})"], :style => [row_header_style, row_header_style, bold_money, bold_money, row_header_style, bold_money, bold_money, bold_money]
  study_level_n_total_cell = "F#{previous_row+1}"
  study_level_r_total_cell = "G#{previous_row+1}"

  sheet.add_row []

  sheet.add_row ["Study Budget", "Notes", "", "", "", "", "", ""], :style => header_style
  sheet.add_row ["Total Study Cost (Sponsor Cost)", "", "=#{study_level_n_total_cell}"], :style => [default, default, money, money]
  study_budget_start_row = sheet.rows.length
  study_budget_end_row = sheet.rows.length
  sheet.add_row ["Total Margin", "", "=SUM(G#{study_budget_start_row}:G#{study_budget_end_row})"], :style => [default, default, money]
  margin_cell = "C#{sheet.rows.length}"
  indirect_cost_percentage_row = sheet.rows.length + 1
  sheet.add_row ["Study Contingency", "", "=#{margin_cell}-#{total_users_cost_cell}"], :style => [default, default, money]

  sheet.add_row ["Breakeven Analysis", "", "", "", "", "", "" ]

  total_nr_budget = "F#{study_budget_end_row+1}+((B#{indirect_cost_percentage_row}/100.0)*F#{study_budget_end_row+1})"
  total_r_budget  = "G#{study_budget_end_row+1}+((B#{indirect_cost_percentage_row}/100.0)*G#{study_budget_end_row+1})"

  sheet.add_row ["Total Budget", "", "=#{total_r_budget}"], :style => [row_header_style, row_header_style, row_header_style, row_header_style, row_header_style, bold_money, bold_money]

  sheet.column_widths 40, 40, 15, 18, 25, 25, 25, 25
end
