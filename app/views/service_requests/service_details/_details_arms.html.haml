-# Copyright Â© 2011 MUSC Foundation for Research Development
-# All rights reserved.

-# Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

-# 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.

-# 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following
-# disclaimer in the documentation and/or other materials provided with the distribution.

-# 3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products
-# derived from this software without specific prior written permission.

-# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,
-# BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
-# SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
-# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
-# TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.arm-details
  .page-header
    %h3
      = t(:proper)[:service_details][:arm_information_notice]
      %small
        = t(:proper)[:service_details][:arm_information_instructions]
  .arm-info
    - x = 0
    = nested_form_for protocol, method: :post do |f|
      .arm-header.col-sm-12
        .arm-cell.col-sm-4
          = t(:service_request_details)[:name]
        .arm-cell.col-sm-3
          = t(:service_request_details)[:number_of_subjects]
        .arm-cell.col-sm-3
          = t(:service_request_details)[:number_of_visits]
        .col-sm-2
      - unlocked = service_request.arms_editable?
      .arms
        = f.fields_for :arms do |arm|
          = arm.hidden_field :new_with_draft, value: unlocked
          - cannot_remove_class = can_be_deleted?(arm.object) ? nil : 'cannot_remove'
          .arm-cell.col-sm-4
            = arm.text_field :name, disabled: !unlocked
          .arm-cell.skinny_fields.col-sm-3
            = arm.text_field :subject_count, disabled: !unlocked, :'data-minimum_subject_count' => arm.object.minimum_subject_count, :'data-in_cwf' => arm_has_subject_data?(arm.object), class: 'arm_subject_count'
          .arm-cell.skinny_fields.col-sm-3
            = arm.text_field :visit_count, disabled: !unlocked, :'data-minimum_visit_count' => arm.object.minimum_visit_count, :'data-in_cwf' => arm_has_subject_data?(arm.object), class: 'arm_visit_count'
          .arm-cell.col-sm-2{id: "#{x+=1}"}
            = arm.link_to_remove "Remove Arm", class: "remove_arm btn btn-sm btn-danger #{cannot_remove_class}" unless !unlocked
      - if unlocked
        .add-arm
          = f.link_to_add "Add Arm", :arms, class: "btn btn-sm btn-success"
        %br
