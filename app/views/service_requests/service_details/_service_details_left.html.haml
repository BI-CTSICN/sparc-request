-# Copyright Â© 2011 MUSC Foundation for Research Development
-# All rights reserved.

-# Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

-# 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.

-# 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following
-# disclaimer in the documentation and/or other materials provided with the distribution.

-# 3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products
-# derived from this software without specific prior written permission.

-# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,
-# BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
-# SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
-# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
-# TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.col-sm-9.service-details-left
  .date-instructions
    = t(:proper)[:service_details][:instructions]
  .date-details
    .page-header
      %h3
        = t(:proper)[:service_details][:enter_dates_notice]














  #show-visit-calendar-details
    .visit-calendar-details
      = fields_for service_request.protocol do |f|
        .arm-info
          .arm-header
            .arm-cell
              = t(:service_request_details)[:study_start_date]
            .arm-cell.arm-cell-right
              = t(:service_request_details)[:study_end_date]
          .arms
            .arm-cell
              = text_field_tag :start_date, (service_request.protocol.start_date.strftime('%_m/%d/%Y') rescue nil) # only used for datepicker
              = image_tag 'calendar_edit.png'
              = f.hidden_field :start_date
            .arm-cell.arm-cell-right
              = text_field_tag :end_date, (service_request.protocol.end_date.strftime('%_m/%d/%Y') rescue nil) #only use for datepicker
              = image_tag 'calendar_edit.png'
              = f.hidden_field :end_date
        - if service_request.has_per_patient_per_visit_services?
          .arm-info
            .arm-header
              .arm-cell
                = t(:service_request_details)[:recruitment_start_date]
              .arm-cell.arm-cell-right= t(:service_request_details)[:recruitment_end_date]
            .arms
              .arm-cell
                = text_field_tag :recruitment_start_date, (service_request.protocol.recruitment_start_date.strftime('%_m/%d/%Y') rescue nil)
                = image_tag 'calendar_edit.png'
                = f.hidden_field :recruitment_start_date
              .arm-cell.arm-cell-right
                = text_field_tag :recruitment_end_date, (service_request.protocol.recruitment_end_date.strftime('%_m/%d/%Y') rescue nil)
                = image_tag 'calendar_edit.png'
                = f.hidden_field :recruitment_end_date

    - if (sub_service_request.nil? ? service_request.has_per_patient_per_visit_services? : sub_service_request.has_per_patient_per_visit_services?)
      %div
      .arm-info
        - x = 0
        = nested_form_for service_request.protocol, method: :post do |f|
          .arm-header
            .arm-cell= t(:service_request_details)[:name]
            .arm-cell= t(:service_request_details)[:number_of_subjects]
            .arm-cell= t(:service_request_details)[:number_of_visits]
          - unlocked = service_request.arms_editable?
          .arms
            = f.fields_for :arms do |arm|
              = arm.hidden_field :new_with_draft, value: unlocked
              - cannot_remove_class = can_be_deleted?(arm.object) ? nil : 'cannot_remove'
              .arm-cell
                = arm.text_field :name, disabled: !unlocked
              .arm-cell.skinny_fields
                = arm.text_field :subject_count, disabled: !unlocked, :'data-minimum_subject_count' => arm.object.minimum_subject_count, :'data-in_cwf' => arm_has_subject_data?(arm.object), class: 'arm_subject_count'
              .arm-cell.skinny_fields
                = arm.text_field :visit_count, disabled: !unlocked, :'data-minimum_visit_count' => arm.object.minimum_visit_count, :'data-in_cwf' => arm_has_subject_data?(arm.object), class: 'arm_visit_count'
              .arm-cell{id: "#{x+=1}"}
                = arm.link_to_remove "Remove Arm", class: "remove_arm btn btn-sm btn-danger #{cannot_remove_class}" unless !unlocked
          - if unlocked
            .add-arm
              = f.link_to_add "Add Arm", :arms, class: "btn btn-sm btn-success"
            %br

  .visit-calendar-details{class: ((sub_service_request.nil? ? service_request.line_items.empty? : sub_service_request.line_items.empty?) ? '' : 'hidden')}
    .instructions
      = t(:service_request_details)[:services_required]
