-# Copyright Â© 2011-2016 MUSC Foundation for Research Development~
-# All rights reserved.~

-# Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:~

-# 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.~

-# 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following~
-# disclaimer in the documentation and/or other materials provided with the distribution.~

-# 3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products~
-# derived from this software without specific prior written permission.~

-# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,~
-# BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT~
-# SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL~
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS~
-# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR~
-# TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.~

%table.table{cellpadding: 3}
  %thead
    %tr.skinny-black-border
      %td{:colspan => 3}
        %strong= t(:notifier)[:request_amendment]
    %tr.skinny-black-border.left
      %th.skinny-black-border= t(:notifier)[:sr_id_acronym]
      %th.skinny-black-border= t(:notifier)[:service]
      %th.skinny-black-border= t(:notifier)[:action]

  %tbody
    - @audit_report[:line_items].each do |last_change|
      - service = Service.find(last_change.audited_changes["service_id"])
      - if last_change.action == 'destroy'
        - ssr_id = SubServiceRequest.find(last_change.audited_changes['sub_service_request_id']).display_id
      - else
        - ssr_id = LineItem.find(last_change.auditable_id).sub_service_request.display_id
      %tr.skinny-black-border
        %td.skinny-black-border= ssr_id
        %td.skinny-black-border= service.name
        %td.skinny-black-border.center= AUDIT_ACTIONS[last_change.action]
%br
%br
